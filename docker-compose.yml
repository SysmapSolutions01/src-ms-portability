version: '3'

services:
  zookeeper:
    container_name: 'zookeeper-portability'
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181


  kafka:
    container_name: 'kafka-portability'
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_PARTITIONS: 3
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  sonarqube:
    container_name: 'sonarqube-portability'
    image: sonarqube:latest
    ports:
      - 9000:9000
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true


  mongodb:
    container_name: 'mongo-portability'
    image: mongo
    ports:
      - 27017:27017


  postgresql:
    image: postgres:13.5-alpine
    container_name: postgre-portability
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=src-ms-portability
    volumes:
      - db_data:/var/lib/postgresql

  ms1:
    image: 'sysmaptreinamento2/src-ms-portability:latest'
    build:
      context: .
    container_name: src-ms-portability
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgre-portability:5432/src-ms-portability
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create

volumes:
  db_data: {}